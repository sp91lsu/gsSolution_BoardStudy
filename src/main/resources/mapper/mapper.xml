<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.study.happy.dao.BoardDao">
    <resultMap id="mapList" type="map">
        <result column="seq" property="seq"/>
        <result column="mem_id" property="memId"/>
        <result column="mem_name" property="memName"/>
        <result column="board_subject" property="boardSubject"/>
        <result column="board_content" property="boardContent"/>
        <result column="reg_date" property="regDate"/>
        <result column="upt_date" property="uptDate"/>
        <result column="view_cnt" property="viewCnt"/>
        <result column="tot_rows" property="totRows"/>
    </resultMap>

    <sql id="columns">
        seq
        ,mem_id
            ,mem_name
            ,board_subject
            ,reg_date
            ,upt_date
            ,view_cnt
    </sql>

    <sql id="search">
        select
        row_number() over(order by seq desc) rnum,
        <include refid="columns"/>
        from board_study
        where 1=1
        <if test="schText != null and schText != ''">
            and ${scope} like '%'||#{schText}||'%'
        </if>
        <if test="date1 != null and date2 != null and date1 != '' and date2 != ''">
            and TO_CHAR(reg_date,'YYYY-MM-DD') between #{date1} and #{date2}
        </if>
    </sql>

    <!--메인페이지 리스트-->
    <select id="list" parameterType="map" resultMap="mapList">
        with SCH as(
            <include refid="search"/>
        )
        select SCH.*, (select count(SCH.rnum) from SCH) tot_rows
        from SCH
        <choose>
            <when test="fromRow==null">
                where SCH.rnum between 1 and 10
            </when>
            <otherwise>
                where SCH.rnum between ${fromRow} and (${fromRow} + ${rowsPerPage} - 1)
            </otherwise>
        </choose>
    </select>

    <!--글정보 뷰-->
    <select id="one" parameterType="int" resultMap="mapList">
        select
            seq
             ,mem_id
             ,mem_name
             ,board_subject
             ,DBMS_LOB.SUBSTR(board_content, 1000, 1) AS board_content
             ,reg_date
             ,upt_date
             ,view_cnt
        from board_study
        where seq = #{seqInt}
    </select>

    <!--수정 뷰 용도-->
    <select id="miniOne" parameterType="int" resultMap="mapList">
        select
            seq
             ,mem_id
             ,mem_name
             ,board_subject
             ,DBMS_LOB.SUBSTR(board_content, 1000, 1) AS board_content
        from board_study
        where seq = #{seqInt}
    </select>

    <insert id="write" parameterType="map">
        INSERT INTO board_study
            (
             seq
            , mem_id
            , mem_name
            , board_subject
            , board_content
            , reg_date
            , upt_date
            , view_cnt
            )
        VALUES (
                (select NVL(max(seq + 1), 0) from board_study),
                #{id},
                #{name},
                #{subject},
                #{content},
                SYSDATE,
                SYSDATE,
                0
                )
    </insert>
    <!--조회수증가-->
    <update id="viewCntInc" parameterType="int">
        update board_study set
            view_cnt = view_cnt + 1
        where seq = #{seqInt}
    </update>

    <update id="update" parameterType="map">
        update board_study set
            board_subject = #{subject}
            ,board_content = #{content}
            ,upt_date = sysdate
        where seq = #{seq}
    </update>

    <delete id="delete" parameterType="java.util.List">
        DELETE FROM board_study
        <where> seq in
            <foreach collection="list" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
        </where>

    </delete>
</mapper>

